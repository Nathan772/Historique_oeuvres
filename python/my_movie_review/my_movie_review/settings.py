"""
Django settings for my_movie_review project.

Generated by 'django-admin startproject' using Django 4.2.18.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
import django
#django.setup()
# from users.models import UserTable
# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-hzobn@r7jp1a2l35k%#j_ur$aby(#(4^$bw#re0%@&4sri6!-x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["http://localhost:4200",
"127.0.0.1"
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'my_movie_review',

]

#source disable 
#csrf :  https://stackoverflow.com/questions/16458166/how-to-disable-djangos-csrf-validation

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #security but too powerful cannot handle for now
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

ROOT_URLCONF = 'my_movie_review.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'my_movie_review.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR +"/"+'db.sqlite3',
    # }
    'default': { 'ENGINE': 'django.db.backends.mysql', 'NAME': 'historyDB', 'USER': 'nathanb', 'PASSWORD': 'Orez_2456', 'HOST': '127.0.0.1', 'PORT': '3306', }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

"""
prevent from front-end cross-origin
mais il y a d'autres manières de faire
plus propres.
Là c'est juste pour le tp.
CORS_ORIGIN_ALLOW_ALL : à remplacer
c'est sale
"""
#temporary
CORS_ORIGIN_ALLOW_ALL = True

"""
 
enables to precise 
which hosts are allowed to exchange data.

4200
refers to angular,
127.0.0.1
refers to django

"""
"""
ALLOWED_HOSTS = ["localhost:4200", "127.0.0.1"]
SECURE_PROXY_SSL_HEADER = ('')
CSRF_TRUSTED_ORIGINS = ["localhost:4200"]
CSRF_ALLOWED_ORIGINS = ["localhost:4200"]
CORS_ORIGINS_WHITELIST = ["localhost:4200"]
"""


CORS_ALLOW_METHODS = (
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
)
CORS_ALLOW_HEADERS = (
    "accept",
    "authorization",
    "content-type",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
)
CORS_ALLOWED_ORIGINS =  [
     'http://localhost:4200',  
     
]


CORS_TRUSTED_ORIGINS = [
    '127.0.0.1',
     'http://localhost:4200',  
]
CSRF_TRUSTED_ORIGINS = [
     'http://localhost:4200', 
]
CORS_ORIGINS_WHITELIST = [
     'http://localhost:4200',  
]

#source
#https://stackoverflow.com/questions/53813863/what-is-the-recommended-way-to-have-csrf-protection-in-a-django-rest-framework
#https://stackoverflow.com/questions/78490813/csrf-token-in-angular-17-using-django
CSRF_USE_SESSIONS = False
CSRF_COOKIE_HTTPONLY = False  # this is the default, and should be kept this way
CSRF_COOKIE_NAME = 'X-CSRFToken'
CSRF_HEADER_NAME = 'X-CSRFToken'


